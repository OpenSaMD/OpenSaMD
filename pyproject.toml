[tool.poetry]
name = "rai"
version = "0.2.0-dev4"
readme = "README.md"
description = "AI assisted treatments accessible to all"
authors = ["Simon Biggs <simon.biggs@radiotherapy.ai>"]
license = "AGPL-3.0-or-later"

homepage = "https://radiotherapy.ai"
repository = "https://github.com/RadiotherapyAI/rai"
documentation = "https://docs.radiotherapy.ai"

classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
]

[tool.poetry.dependencies]
# Upper pinning here is being forced on us by scipy. We don't want to do this.
# Ideally find a way to not upper pin if possible. See the following for more
# details:
# https://iscinumpy.dev/post/bound-version-constraints/#pinning-the-python-version-is-special

# TODO: Create a release CLI that temporarily removes these bounds prior to
# release.
python = ">=3.7,<3.11"

# We keep all version constraints as broad as possible for the library release.
# For the application release, all versions are pinned and tightly controlled.
# But that is managed within the `poetry.lock` file, not here. See
# https://iscinumpy.dev/post/app-vs-library/ and
# https://iscinumpy.dev/post/bound-version-constraints/ for more info.
shapely = "*"
numpy = "*"
scikit-image = "*"
scipy = "*"
pydicom = "*"
click = "*"
numba = "*"
tqdm = "*"

# plotly = ">=4"
# ipywidgets = ">=7.6"
# jupyter-dash = "*"
# pandas = "*"
# statsmodels = "*"
# ipympl = "*"

tensorflow = { version = "*", markers = "platform_system != \"Windows\"" }
tensorflow-intel = { version = "*", markers = "platform_system == \"Windows\"" }
tensorflow-directml-plugin = { version = "*", markers = "platform_system == \"Windows\"" }

# Pin while the model is likely to change significantly from one version to the
# next, and also pinning while raicontours is utilising development releases.
raicontours = "0.3.0-dev2"
# raicontours = { path = "../raicontours", develop = true }

# Not needed after Python 3.7 support is dropped
PyWavelets = "<1.4.0"

[tool.poetry.dev-dependencies]
jupyter-book = "*"
black = "*"
blackdoc = "*"
pytest = "*"
pyright = "*"
pylint = "*"
pytest-pylint = "*"
pre-commit = "*"
ipykernel = "*"
matplotlib = "*"
mypy = "*"
pyoxidizer = "*"
tomlkit = "*"

[tool.poetry.scripts]
rai = "rai.__main__:cli"

[tool.pyright]
include = ["rai"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
]
# typeCheckingMode = "strict"

[tool.isort]
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

known_second_party = ["raicontours"]
known_first_party = ["rai"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "SECOND_PARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
