name: Main

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        task: ["pytest", "docs", "pyright"]
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install -U pip # to ensure version > 20 to have cache dir
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ matrix.task }}-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}

      - name: Upgrade pip and setuptools
        run: |
          pip install --upgrade pip setuptools

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true

      - name: Configure Poetry to not use experimental installer
        run: |
          poetry config experimental.new-installer false

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Poetry cache
        uses: actions/cache@v2
        id: poetry-cache
        with:
          path: .venv
          key: venv-${{ matrix.task }}-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      # This is from <https://github.com/python-poetry/poetry/blob/639d5e057/.github/workflows/main.yml#L57-L60>
      - name: Ensure cache is healthy
        if: steps.poetry-cache.outputs.cache-hit == 'true'
        shell: bash
        run: |
          timeout 10s poetry run pip --version || rm -rf .venv

      - name: Poetry install
        run: |
          poetry install

      # =======
      # PyRight
      # =======

      - name: Run PyRight
        if: matrix.task == 'pyright'
        run: |
          poetry run pyright

      # ======
      # PyTest
      # ======

      - name: Run PyTest
        if: matrix.task == 'pytest'
        run: |
          poetry run pytest --pylint

      # ====
      # Docs
      # ====

      - name: Build docs
        if: matrix.task == 'docs'
        run: |
          poetry run rtai

      - name: Add GitHub Pages config files
        if: github.event_name == 'push' && matrix.task == 'docs'
        run: |
          echo docs.radiotherapy.ai > docs/_build/html/CNAME
          touch docs/_build/html/.nojekyll

      - name: Deploy to gh-pages branch
        if: github.event_name == 'push' && matrix.task == 'docs'
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          branch: gh-pages
          folder: docs/_build/html
